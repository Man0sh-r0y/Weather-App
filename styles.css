*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  /* font-family: "Merriweather Sans", sans-serif; */
  font-family: "Aoboshi One", serif;
}

:root {
  /* declearation of CSS variables */
  --colorDark1: #112d4e;
  --colorDark2: #bb460b;
  --colorLight1: #dbe2ef;
  --colorLight2: #f9f7f7;
}

body {
  max-width: 100vw;
  min-height: 100vh;
  color: var(--colorLight2);
  background-image: linear-gradient(160deg, #112d4e 0%, #3f72af 100%);
  /* background-image: linear-gradient(
    230deg,
    hsl(186deg 92% 29%) 0%,
    hsl(188deg 100% 28%) 11%,
    hsl(189deg 100% 28%) 22%,
    hsl(191deg 100% 28%) 33%,
    hsl(193deg 100% 28%) 44%,
    hsl(194deg 100% 28%) 56%,
    hsl(196deg 100% 27%) 67%,
    hsl(197deg 100% 27%) 78%,
    hsl(198deg 100% 27%) 89%,
    hsl(200deg 94% 27%) 100%
  ); */
}

h1 {
  /* Weather App text */
  text-align: center;
  text-transform: uppercase;
  padding-top: 20px;
}

.tab-container {
  width: 90%;
  max-width: 550px;
  margin: 0 auto; /* It is centering the element horizontally */
  margin-top: 4rem;
  display: flex;
  justify-content: space-between;
}

.tab {
  cursor: pointer;
  /* font-size: 0.875rem; */
  font-size: 1.05rem;
  letter-spacing: 1.75px;
  padding: 5px 8px;
}

.tab.current-tab {
  /* When the element has both classes. */
  background-color: rgba(130, 130, 130, 0.96);
  border-radius: 4px;
}

.weather-container {
  margin-block: 4rem;
}

.btn {
  all: unset;
  /* It is a CSS property that resets all CSS properties to their initial values. It removes
  all styles that may have been inherited from parent elements or previously applied styles. This is useful when you want to start with a clean slate and apply only the styles that you need. */
  /* Same things can be done by it: */
  /* appearance: none;
    border:none;
    color: white; */
  font-size: 0.85rem;
  text-transform: uppercase;
  border-radius: 5px;
  background-color: var(--colorDark2);
  cursor: pointer;
  padding: 10px 30px;
  margin-bottom: 10px;
}

.sub-container {
  /* display: flex;
  flex-direction: column;
  align-items: center; */
  width: 90%;
  margin: 0 auto;
  max-width: 1000px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.grant-access-location {
  display: none;
}

.grant-access-location.active {
  display: flex;
}

.grant-access-location img {
  margin-bottom: 2rem;
}

.grant-access-location p:first-of-type {
  /* It is selecting the first `p` element inside the element */
  font-size: 1.75rem;
  font-weight: 600;
}

.grant-access-location p:last-of-type {
  /* It is selecting the last `p` element inside the element */
  font-size: 0.85rem;
  font-weight: 500;
  margin-top: 0.75rem;
  margin-bottom: 1.75rem;
  letter-spacing: 0.75px;
}

.loading-container {
  display: none;
}

.loading-container.active {
  display: flex;
}

.loading-container p {
  text-transform: uppercase;
}

.weather-info {
  display: none;
}

.weather-info.active {
  display: flex;
}

.weather-info p {
  font-size: 1.5rem;
  font-weight: 200;
}

.weather-info img {
  width: 90px;
  height: 90px;
}

.weather-info p[data-temperature] {
  /* p element that has [data-temperature] attribute */
  font-size: 2.75rem;
  font-weight: 700;
}

.name {
  display: flex;
  align-items: center;
  gap: 0 0.5rem;
  margin-bottom: 1rem;
}

.name p {
  font-size: 2rem;
}

.name img {
  width: 40px;
  height: 40px;
  object-fit: contain;
}

.weather-icon{
  /* width: 100px;
  height: 100px; */
  /* scale: 1.3; */
  margin: 1rem;
}

.parameter-container {
  width: 90%;
  margin: 0 auto;
  margin-top: 2rem;
  display: flex;
  gap: 10px 20px;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}

.parameter {
  /* width: 30%; */
  /* max-width: 200px; */
  width: 200px;
  /* background-color: rgba(219, 226, 239, 0.5); */
  background-color: white;
  color: black;
  border-radius: 5px;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  gap: 5px 0;
  justify-content: space-between;
  align-items: center;
}

.parameter img {
  width: 100px;
  height: 100px;
}

.parameter p:first-of-type {
  font-size: 1.15rem;
  font-weight: 600;
  text-transform: uppercase;
}

.parameter p:last-of-type {
  font-size: 1rem;
  font-weight: 200;
}

.search-weather-by-city {
  display: none;
  width: 90%;
  max-width: 550px;
  margin: 0 auto;
  justify-content: center;
  align-items: center;
  gap: 0 10px;
  margin-bottom: 3rem;
}

.search-weather-by-city.active {
  display: flex;
}

.search-weather-by-city input {
  all: unset;
  width: calc(100% - 80px);
  height: 50px;
  padding: 0 20px;
  /* background-color: rgba(219, 226, 239, 0.5); */
  background-color: white;
  border-radius: 3rem;
  color: black;
}


.search-weather-by-city input:focus {
  outline: 3px solid rgba(255, 255, 255, 0.7);
}

.search-weather-by-city .btn {
  padding: unset;
  width: 55px;
  height: 55px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 100%;
  margin-bottom: 1px;
  background-color: rgb(121, 10, 4);
}

.api-error-container {
  display: none;
}

.api-error-container.active {
  display: flex;
  gap: 1rem 0;
}

.api-error-container img {
  width: 100%;
  max-width: 300px;
  aspect-ratio: 1 / 1;
  object-fit: cover;
}

.api-error-container p {
  text-align: center;
}

/* Adding responsiveness */
@media (max-width: 768px) {
  .parameter-container {
    flex-direction: column;
    align-items: center;
  }
}

@media (max-width: 320px) {
  .grant-access-location p:first-of-type {
    /* It is selecting the first `p` element inside the element */
    font-size: 1.3rem;
    font-weight: 600;
  }
}
